# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Presentation Web Test

on:
  pull_request:
    branches: 
      - master
    paths:
      - src/presentation/web/**
  push:
    branches: 
      - master
    paths:
      - .github/workflows/presentation.web.test.yml

env:
  VERSION: 0.0.4

jobs:
  build-test-image:    
    name: Build and test image
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker build
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true # Export to Docker Engine rather than pushing to a registry
          tags: ${{ github.run_id }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          context: src/presentation/web/
      - name: Unit Testing in Docker
        run: docker run --rm ${{ github.run_id }}
      - name: Docker Metadata for Final Image Build
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: rulyotano/minesweeper-presentation-web
          flavor: |
            latest=true
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=raw,value=${{ env.VERSION }}
      - name: Find comment for image tags
        uses: peter-evans/find-comment@v2
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v3
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```

            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace

  build-push-image:
    name: Build and push image
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    needs:
      - build-test-image
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Compile
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true
          tags: ${{ github.run_id }}
          target: build
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          context: src/presentation/web/
      - name: Copy build directory
        run: |
          docker run -d --name mineswipper-build ${{ github.run_id }} ping localhost
          docker cp mineswipper-build:/app/build ./src/presentation/web/
          docker rm -f mineswipper-build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker Metadata for Final Image Build
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: rulyotano/minesweeper-presentation-web
          flavor: |
            latest=true
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=raw,value=${{ env.VERSION }}
      - name: Docker build and Push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          target: prod
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-contexts: build=src/presentation/web/build
          file: src/presentation/web/Dockerfile.prod
          platforms: linux/amd64,linux/arm64,linux/arm/v7
